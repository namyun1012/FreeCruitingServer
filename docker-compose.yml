version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  # Spring Boot Application Service (freecruiting)
  app:
    build: .
    image: freecruiting:latest
    container_name: freecruiting
    ports:
      - "8443:8443"
    depends_on:
      - redis
    mem_limit: 1g
    restart: on-failure
    networks:
      - app-network
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATA_REDIS_HOST=redis  # SPRING_REDIS_HOST → SPRING_DATA_REDIS_HOST
      - SPRING_DATA_REDIS_PORT=6379   # SPRING_REDIS_PORT → SPRING_DATA_REDIS_PORT
      - JAVA_TOOL_OPTIONS=-Xms256m -Xmx512m
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
    volumes:
      # 업로드된 파일들을 호스트에 저장
      - ./uploads:/app/uploads
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - app-network
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - app-network
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - app-network
volumes:
  redis-data:
  grafana-storage: